{{- define "common.cronjob.cronjobsGeneric" }}

{{- $nfsMountName := printf "%s-nfs-mount" .Values.app.name }}
{{- $nfsServer := printf "%s" .Values.nfsMount.nfsServer }}
{{- $nfsFilePath := printf "%s" .Values.nfsMount.nfsPath }}
{{- $accessMode := printf "%s" .Values.nfsMount.accessMode }}

{{- if hasKey .Values "cronjobs" }}
  {{- $cronjobsConfig := .Values.cronjobs | default (dict "enabled" false) }}
  {{- if $cronjobsConfig.enabled }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .CronValues.name }}
  annotations:
    kubernetes.io/change-cause: "{{ .Values.stable.image.tag }}"
  labels:
    {{- include "ApplicationLabel-stable" . | nindent 4 }}
spec:
  schedule: "{{ .CronValues.schedule }}"
  timeZone: "Asia/Dhaka"
  successfulJobsHistoryLimit: {{ .CronValues.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .CronValues.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: {{ .CronValues.backoffLimit }}
      template:
        metadata:
          labels:
            {{- include "ApplicationLabel-stable" . | nindent 12 }}
        spec:
          imagePullSecrets:
            {{- range .Values.imagePullSecrets }}
            - name: {{ . }}
            {{- end }}
          volumes:
            {{- if .Values.vault.vaultsslsecret.enabled }}
            - name: {{ .Values.app.name }}-ssl-volume
              secret:
                defaultMode: 420
                secretName: {{ .Values.app.name }}-ssl-keys-secrets
            {{- end }}                  
            {{- if .CronValues.mountPhpfpmconf }}
              {{- if .Values.phpfpmconf.enabled }}
            - name: {{ .Values.app.name }}-cm-phpfpmconf
              configMap:
                name: {{ .Values.app.name }}-cm-phpfpmconf
              {{- end }}
            {{- end }}
            {{- if .CronValues.mountNginxconf }}
              {{- if .Values.nginxconf.enabled }}
            - name: {{ .Values.app.name }}-cm-nginxconf
              configMap:
                name: {{ .Values.app.name }}-cm-nginxconf
              {{- end }}
            {{- end }}
            {{- if .Values.nfsMount.enabled }}   
            - name: {{ $nfsMountName }}
              nfs:
                server: {{ $nfsServer }}
                path: {{ $nfsFilePath }}
                readOnly: {{ $accessMode }}
            {{- end }} 
          {{- if .Values.hostAliases.enabled }}
          hostAliases:
          {{- range .Values.hostAliases.aliases }}
            - ip: "{{ .ip }}"
              hostnames:
              {{- range .hostnames }}
              - {{ quote . }}     
              {{- end }}     
          {{- end }}
          {{- end }}
          {{- if .Values.dnsCustomConfig.enabled }}
          dnsPolicy: {{ .Values.dnsCustomConfig.dnsPolicy | quote }}
          dnsConfig:
            nameservers:
            {{- range .Values.dnsCustomConfig.dnsConfig.nameservers }}
              - {{ . }}  
            {{- end }}
            searches:
            {{- range .Values.dnsCustomConfig.dnsConfig.searches }}
              - {{ . }}  
            {{- end }}    
            options:
            {{- range .Values.dnsCustomConfig.dnsConfig.options }}
              - name: {{ .name }}
                value: {{ quote .value }}  
            {{- end }}                
          {{- end }}            
          containers:
            - name: {{ .CronValues.name }}
              image: {{ .Values.stable.image.repository }}:{{ .Values.stable.image.tag }}
              {{- if .CronValues.enabledCommandArgs }}
              command:
                {{- if .CronValues.commandArgs }}
                {{- toYaml .CronValues.commandArgs | nindent 16 }}
                {{- end }}
              {{- end }}
              volumeMounts:
                {{- if .Values.vault.vaultsslsecret.enabled }}
                - mountPath: {{ .Values.vault.vaultsslsecret.ssl_mount_path }}
                  name: {{ .Values.app.name }}-ssl-volume
                  readOnly: true
                {{- end }}                             
                {{- if .CronValues.mountPhpfpmconf }}
                  {{- if .Values.phpfpmconf.enabled }}
                - mountPath: /app/opt/php/etc/php-fpm.conf
                  name: {{ .Values.app.name }}-cm-phpfpmconf
                  readOnly: true
                  subPath: php-fpm.conf
                  {{- end }}
                {{- end }}
                {{- if .CronValues.mountNginxconf }}
                  {{- if .Values.nginxconf.enabled }}
                - mountPath: /app/opt/nginx/conf/nginx.conf
                  name: {{ .Values.app.name }}-cm-nginxconf
                  readOnly: true
                  subPath: nginx.conf
                  {{- end }}
                {{- end }}
                {{- if .Values.nfsMount.enabled }}
                - name: {{ $nfsMountName }}
                  mountPath: {{ .Values.nfsMount.containerPath }}
                {{- end }} 
              imagePullPolicy: {{ .Values.stable.image.pullPolicy }}
              {{- if .CronValues.ports.enabled }}
              ports:
              {{- range .CronValues.ports.ports }}
                - name: {{ .name }}
                  containerPort: {{ .containerPort }}
                {{- end }}
              {{- end }}                    
              env:
              {{- if .CronValues.enabledEnv }}
                {{- range .CronValues.env }}
                - name: {{ .name }}
                  value: {{ .value | quote }}
                {{- end }}
              {{- end }}
                - name: APP_VERSION
                  value: "{{ .Values.stable.image.tag }}"
              envFrom:
                {{- if .Values.cofigmapFromFile.enabled }}
                - configMapRef:
                    name: {{ .Values.app.name }}-configmap
                {{- end }}    
                - secretRef:
                    name: {{ .Values.app.name }}-secrets
              {{- if .CronValues.resourceRequirements.enabled }}      
              resources:
                limits:
                  cpu: {{ .CronValues.resourceRequirements.limits.cpu }}
                  memory: {{ .CronValues.resourceRequirements.limits.memory }}
                requests:
                  cpu: {{ .CronValues.resourceRequirements.requests.cpu }}
                  memory: {{ .CronValues.resourceRequirements.requests.memory }}
              {{- end }}                      
          restartPolicy: {{ .CronValues.restartPolicy }}
  {{- end }}    
{{- end }}  

{{- end }}
